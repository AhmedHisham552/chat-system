version: "3"

services:
  
  mysql:
    container_name: "chatsystem-mysql-c"
    image: mysql:5.7.34
    environment:
      - MYSQL_ROOT_PASSWORD=verysecret
      - MYSQL_PASSWORD=verysecret
      - MYSQL_DATABASE=chatsystem
    ports:
      - "3306:3306"
    volumes:
      - chatsystem-mysql-data:/var/lib/mysql

  redis:
    image: 'redis:alpine'
    command: redis-server --appendonly yes
    ports:
      - '6379:6379'
    volumes:
        - redis-data:/data
    restart: always

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: elasticsearch
    environment:
      - node.name=es-node
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  sidekiq:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec sidekiq -q default"
    depends_on:
      - redis
    links:
      - redis
    volumes:
      - .:/myapp
    env_file:
      - .env
  backend:
    container_name: chatsystem-backend-c
    image: chatsystem-backend-i
    command: bash -c "rm -f tmp/pids/server.pid && (rails db:migrate || rails db:setup) && bundle exec rails s -p 3000 -b '0.0.0.0'"
    restart: always
    build: .
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - mysql
      - redis
      - es01
    links: 
      - mysql
      - redis
      - es01

volumes:
  chatsystem-mysql-data:
  es-data:
    driver: local
  redis-data:
